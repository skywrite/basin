#!/usr/bin/env node

 process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0

var program = require('commander')
  , basin = require('../lib/basin')
  , S3 = require('../lib/s3').S3
  , fs = require('fs-extra')
  , cl = require('cl')
  , colors = require('colors')

program
  .version(require('../package').version)
  .option('--create [dir]', 'Creates a skeleton site at the destination directory.')
  .option('--deploy', 'Deploys/publishes the current directory and sub directories. Must have basin.conf.json file present.')
  .option('--remote-delete', 'Deletes the remote S3 bucket. Must have basin.conf.json file present in current directory.')
  .parse(process.argv)

if (program.create) {
  basin.create(program.create, function(err) {
    if (err) {
      console.error(err)
      process.exit(1)
    }

    console.log('Created at ' + program.create)
  })

  return
}

if (program.deploy) {
  checkBasinConfExists()
  basin.deploy(function(err, url) {
    if (err) cl.exit(100, err)
    console.log('  \n  successfully deployed to %s\n', colors.bold(colors.red(url)))
  })

  return
}

if (program.remoteDelete) {
  checkBasinConfExists()
  var basinConf = fs.readJSONFileSync('./basin.conf.json')
  var s3 = new S3(basinConf)
  s3.deleteBucket(basinConf.bucket, function(err) {
    if (err) cl.exit(101, err)
    console.log('Deleted.')
  })
}


function checkBasinConfExists () {
  if (!fs.existsSync('./basin.conf.json')) 
    cl.exit(103,'./basin.conf.json does not exist.')
}
